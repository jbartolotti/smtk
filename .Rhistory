ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x))) +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red')
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 15
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 20
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 15
config$accel_filter_N <- 8
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 10
config$accel_filter_N <- 8
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 20
config$accel_filter_N <- 8
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 20
config$accel_filter_N <- 8
config$accel_filter_type <- 'high'
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 20
config$accel_filter_N <- 8
config$accel_filter_pass <- 'high'
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_pass <- 'high'
resources <- LOAD.resources(config)
config <- LOAD.config('default')
config$process_trials <- 4 #Instead of 'all'
config$accel_filter_Fc <- 20
config$accel_filter_N <- 8
config$accel_filter_pass <- 'high'
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 20
config$accel_filter_N <- 4
config$accel_filter_pass <- 'high'
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 5
config$accel_filter_N <- 4
config$accel_filter_pass <- 'high'
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 30
config$accel_filter_N <- 4
config$accel_filter_pass <- 'high'
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
config$accel_filter_Fc <- 25
config$accel_filter_N <- 4
config$accel_filter_pass <- 'high'
resources <- LOAD.resources(config)
ggplot2::ggplot(this_trial, ggplot2::aes(x = time)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_x), color = 'red', alpha = .5) +
ggplot2::geom_line(ggplot2::aes(y = signal::filtfilt(resources$accel_filter, accel_x)))
install.packages('KFAS')
plot(this_trial$accel_z)
library(KFAS)
model <- SSModel(
H = matrix(0), # observation matrix
Q = matrix(0.01), # system noise covariance matrix
R = matrix(0.1), # measurement noise covariance matrix
Z = matrix(c(0, 0, 1), nrow = 1), # state transition matrix
T = diag(3), # state covariance matrix
a1 = c(0, 0, 0), # initial state mean
P1 = diag(3) # initial state covariance
)
?SSModel
model <- SSModel(y ~ SSMtrend(1, Q = 0.01), H = 0.01)
model <- SSModel(this_trial$accel_z ~ SSMtrend(1, Q = 0.01), H = 0.01)
model
result <- KFS(model, this_trial$accel_z)
result <- KFS(model)
result
names(result)
plot(result$a)
plot(result$a[10:length(result$a)])
plot(this_trial$accel_z)
plot(result$a[10:length(result$a)])
plot(this_trial$accel_z)
plot(result$a[10:length(result$att)])
plot(result$a[10:length(result$alpha)])
plot(result$a[10:length(result$P)])
plot(result$a[10:length(result$a)])
plot(result$att)
plot(this_trial$accel_z)
plot(result$att)
length(result$att)
length(accel_x)
length(this_trial$accel_x)
ggplot2::ggplot(result, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(data = this_trial, ggplot2::aes(y = accel_z ))
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ))
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$att)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$a)
length(result$a)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$a[2:760])
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
#ggplot2::geom_line(y = result$a[2:760])
ggplot2::geom_line(y = result$alpha)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
#ggplot2::geom_line(y = result$a[2:760])
ggplot2::geom_line(y = result$P)
length(result$P)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$P[2:760])
#ggplot2::geom_line(y = result$alpha)
summary(result$P)
plot(result$P)
plot(result$P[2:760])
plot(result$P[10:760])
plot(result$P[100:760])
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
#ggplot2::geom_line(y = result$a[2:760])
#ggplot2::geom_line(y = result$alpha)
ggplot2::geom_line(y = result$V)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
#ggplot2::geom_line(y = result$a[2:760])
#ggplot2::geom_line(y = result$alpha)
ggplot2::geom_line(y = result$v)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
#ggplot2::geom_line(y = result$a[2:760])
#ggplot2::geom_line(y = result$alpha)
ggplot2::geom_line(y = result$logLik)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$a[2:760], color = 'blue') +
ggplot2::geom_line(y = result$alpha, color = 'black')
#  ggplot2::geom_line(y = result$logLik)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$a[2:760], color = 'blue', alpha = .5) +
ggplot2::geom_line(y = result$alpha, color = 'black')
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$a[2:760], color = 'blue', alpha = .1) +
ggplot2::geom_line(y = result$alpha, color = 'black')
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .5) +
ggplot2::geom_line(y = result$a[2:760], color = 'blue', alpha = .25) +
ggplot2::geom_line(y = result$alpha, color = 'black')
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .25) +
ggplot2::geom_line(y = result$a[2:760], color = 'blue', alpha = .25) +
ggplot2::geom_line(y = result$alpha, color = 'black')
install.packages('impactr')
install.packages("impactr")
library(impactr)
?find_peaks
a <- find_peaks(this_trial, accel_z, min_height = )
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .25) +
ggplot2::geom_line(y = result$a[2:760], color = 'blue', alpha = .25) +
ggplot2::geom_line(y = result$alpha, color = 'black')
a <- find_peaks(this_trial, accel_z, min_height = 9.86, min_dist = .5)
a <- find_peaks(this_trial, this_trial$accel_z, min_height = 9.86, min_dist = .5)
a <- find_peaks(this_trial, 'accel_z', min_height = 9.86, min_dist = .5)
a <- find_peaks(this_trial$accel_z, 'all', min_height = 9.86, min_dist = .5)
?use_resultant
?read_acc
acc <- read_acc(this_trial$accel_z)
install.packages('pracma')
library(pracma)
peaks <- findpeaks(this_trial$accel_z)
summary(peaks)
dim(peaks)
head(peaks)
?findpeaks
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red', alpha = .25) +
ggplot2::geom_vline(xintercept = peaks[,2])
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red') +
ggplot2::geom_vline(xintercept = peaks[,2])
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 20)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red') +
ggplot2::geom_vline(xintercept = peaks[,2])
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 5, threshold = mean(this_trial$accel_z)+sd(this_trial$accel_z))
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red') +
ggplot2::geom_vline(xintercept = peaks[,2])
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 5, threshold = mean(this_trial$accel_z))
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red') +
ggplot2::geom_vline(xintercept = peaks[,2])
mean(this_trial$accel_z)
peaks
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 1, threshold = mean(this_trial$accel_z))
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red') +
ggplot2::geom_vline(xintercept = peaks[,2])
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 1, threshold = 9.86)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red') +
ggplot2::geom_vline(xintercept = peaks[,2])
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 1, threshold = 1)
peaks
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 1)
head(peaks)
peaks <- findpeaks(this_trial$accel_z, threshold = 0)
peaks
peaks <- findpeaks(this_trial$accel_z, threshold = 1)
peaks
peaks <- findpeaks(this_trial$accel_z, threshold = .5)
peaks
peaks <- findpeaks(this_trial$accel_z, threshold = .01)
peaks
peaks <- findpeaks(this_trial$accel_z, threshold = .05)
peaks
mean(this_trial$accel_z)
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 1, threshold = .05)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red') +
ggplot2::geom_vline(xintercept = peaks[,2])
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_vline(xintercept = peaks[,2]) +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red')
peaks <- findpeaks(this_trial$accel_z, minpeakdistance = 1, threshold = .06)
ggplot2::ggplot(this_trial, ggplot2::aes(x = 1:759)) +
ggplot2::theme_bw() +
ggplot2::geom_vline(xintercept = peaks[,2]) +
ggplot2::geom_line(ggplot2::aes(y = accel_z ), color = 'red')
library(stats)
library(ggplot2)
ggplot(data = this_trial, x = time) +
theme_bw() +
geom_line(aes(y = accel_x - mean(accel_x)))
ggplot(data = this_trial, aes(x = time)) +
theme_bw() +
geom_line(aes(y = accel_x - mean(accel_x)))
ggplot(data = this_trial, aes(x = time)) +
theme_bw() +
geom_line(aes(y = accel_x - mean(accel_x)), color = 'red') +
geom_line(aes(y = accel_y - mean(accel_y)), color = 'green') +
geom_line(aes(y = accel_z - mean(accel_z)), color = 'blue')
nrow(this_trial)
fs <- 100 #sampling frequency
n <- nrow(this_trial)
f <- fs / 2 * seq(0, 1, length.out = n / 2 + 1) # frequency vector
fft_data <- fft(this_trial) # fft output
fft_data_x <- fft(this_trial$accel_x) # fft output
summary(fft_data_x)
psd_data_x <- (1 / n) * fft_data_x * Conj(fft_data_x) # psd output
psd_data_x <- psd_data_x[1:(n / 2 + 1), ] # keep only positive frequencies
psd_data_x <- (1 / n) * fft_data_x * Conj(fft_data_x) # psd output
summary(psd_data_x)
psd_data_x
n/2+1
psd_data_x <- psd_data_x[1:floor(n / 2 + 1), ] # keep only positive frequencies
nrow(this_trial)
nrow(this_trial)/2
floor(nrow(this_trial)/2)
n <- floor(nrow(this_trial)/2)*2
this_trial <- this_trial[1:n,]
n
dim(this_trial)
fs <- 100 #sampling frequency
n <- floor(nrow(this_trial)/2)*2
this_trial <- this_trial[1:n,]
f <- fs / 2 * seq(0, 1, length.out = n / 2 + 1) # frequency vector
fft_data_x <- fft(this_trial$accel_x) # fft output
psd_data_x <- (1 / n) * fft_data_x * Conj(fft_data_x) # psd output
psd_data_x <- psd_data_x[1:(n / 2 + 1), ] # keep only positive frequencies
psd_data_x
psd_data_x <- psd_data_x[1:(n / 2 + 1)] # keep only positive frequencies
plot(psd_data_x)
dim(psd_data_x)
length(psd_data_x)
f
ggplot(aes(x = f, y = psd_data)) + theme_bw() + geom_line()
ggplot(data = data.frame(freq = f, ampx = psd_data_x), aes(x = freq, y = ampx)) + theme_bw() + geom_line()
summary(psd_data_x)
head(psd_data_x)
head(mod(psd_data_x))
head(Mod(psd_data_x))
ggplot(data = data.frame(freq = f, ampx = Mod(psd_data_x)), aes(x = freq, y = ampx)) + theme_bw() + geom_line()
fft_data_y <- fft(this_trial$accel_y) # fft output
psd_data_y <- (1 / n) * fft_data_y * Conj(fft_data_y) # psd output
psd_data_y <- psd_data_y[1:(n / 2 + 1)] # keep only positive frequencies
ggplot(data = data.frame(freq = f, ampx = Mod(psd_data_y)), aes(x = freq, y = ampy)) + theme_bw() + geom_line()
ggplot(data = data.frame(freq = f, ampy = Mod(psd_data_y)), aes(x = freq, y = ampy)) + theme_bw() + geom_line()
fft_data_y <- fft(this_trial$accel_y) # fft output
psd_data_y <- (1 / n) * fft_data_y * Conj(fft_data_y) # psd output
psd_data_y <- psd_data_y[1:(n / 2 + 1)] # keep only positive frequencies
head(psd_data_y)
plot(Mod(psd_data_y))
f
ggplot(data = data.frame(freq = f, ampy = Mod(psd_data_y)), aes(x = freq, y = ampy)) + theme_bw() + geom_line()
ggplot(data = data.frame(freq = f, ampy = Mod(psd_data_y)), aes(x = freq[2:length(f)], y = ampy[2:length(f)])) + theme_bw() + geom_line()
dy <- data.frame(freq = f, ampy = Mod(psd_data_y))
head(dy)
dy <- dy[2:nrow(dy),]
head(dy)
ggplot(data = dy, aes(x = freq, y = ampy)) + theme_bw() + geom_line()
fft_data_x <- fft(this_trial$accel_x) # fft output
psd_data_x <- (1 / n) * fft_data_x * Conj(fft_data_x) # psd output
psd_data_x <- psd_data_x[1:(n / 2 + 1)] # keep only positive frequencies
fft_data_y <- fft(this_trial$accel_y) # fft output
psd_data_y <- (1 / n) * fft_data_y * Conj(fft_data_y) # psd output
psd_data_y <- psd_data_y[1:(n / 2 + 1)] # keep only positive frequencies
fft_data_z <- fft(this_trial$accel_z) # fft output
psd_data_z <- (1 / n) * fft_data_z * Conj(fft_data_z) # psd output
psd_data_z <- psd_data_z[1:(n / 2 + 1)] # keep only positive frequencies
dfft <- data.frame(freq = f, x = Mod(psd_data_x), y = Mod(psd_data_y), z = Mod(psd_data_z))
dfft <- dfft[2:nrow(dfft),]
ggplot(data = dfft, aes(x = freq)) + theme_bw() + geom_line(aes(y = x), color = 'red')
ggplot(data = dfft, aes(x = freq)) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue')
bin_width <- 10
bins <- cut(dfft, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
?cut
seq(0, nrow(dfft), by = bin_width)
bins <- cut(dfft$freq, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
bins
dfft$fbin <- cut(dfft$freq, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
dfft_bin <- aggregate(cbind(x, y, z) ~ bins, data = dfft, FUN = mean)
head(dfft_bin)
ggplot(data = dfft, aes(x = freq)) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue')
ggplot(data = dfft_bin, aes(x = bins)) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue')
ggplot(data = dfft_bin, aes(x = bins)) + theme_bw() +
geom_point(aes(y = x), color = 'red') +
geom_point(aes(y = y), color = 'green') +
geom_point(aes(y = z), color = 'blue')
ggplot(data = dfft_bin, aes(x = bins)) + theme_bw() +
geom_bar(aes(y = x), color = 'red')
ggplot(data = dfft_bin, aes(x = as.numeric(bins))) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_point(aes(y = y), color = 'green') +
geom_point(aes(y = z), color = 'blue')
ggplot(data = dfft_bin, aes(x = as.numeric(bins))) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_point(aes(y = x), color = 'red') +
geom_point(aes(y = y), color = 'green') +
geom_point(aes(y = z), color = 'blue')
ggplot(data = dfft_bin, aes(x = as.numeric(bins))) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue') +
geom_point(aes(y = x), color = 'red', size = 2) +
geom_point(aes(y = y), color = 'green', size = 2) +
geom_point(aes(y = z), color = 'blue', size = 2)
bin_width <- 5
dfft$fbin <- cut(dfft$freq, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
dfft_bin <- aggregate(cbind(x, y, z) ~ bins, data = dfft, FUN = mean)
ggplot(data = dfft_bin, aes(x = as.numeric(bins))) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue') +
geom_point(aes(y = x), color = 'red', size = 2) +
geom_point(aes(y = y), color = 'green', size = 2) +
geom_point(aes(y = z), color = 'blue', size = 2)
bin_width <- 5
dfft$fbin <- cut(dfft$freq, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
head(dfft)
summary(dfft)
bin_width <- 10
dfft$fbin <- cut(dfft$freq, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
dfft_bin <- aggregate(cbind(x, y, z) ~ fbin, data = dfft, FUN = mean)
ggplot(data = dfft_bin, aes(x = as.numeric(fbin))) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue') +
geom_point(aes(y = x), color = 'red', size = 2) +
geom_point(aes(y = y), color = 'green', size = 2) +
geom_point(aes(y = z), color = 'blue', size = 2)
bin_width <- 10
dfft$fbin <- cut(dfft$freq, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
dfft_bin <- aggregate(cbind(x, y, z) ~ fbin, data = dfft, FUN = mean)
head(dfft_bin)
dfft_bin
seq(0, nrow(dfft), by = bin_width)
dfft
unique(dfft$fbin)
summary(dfft$freq)
bin_width <- 1
dfft$fbin <- cut(dfft$freq, breaks = seq(0, nrow(dfft), by = bin_width), right = FALSE)
bin_width <- 1
dfft$fbin <- cut(dfft$freq, breaks = seq(0, max(dfft$freq), by = bin_width), right = FALSE)
dfft_bin <- aggregate(cbind(x, y, z) ~ fbin, data = dfft, FUN = mean)
dfft_bin
ggplot(data = dfft_bin, aes(x = as.numeric(fbin))) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue') +
geom_point(aes(y = x), color = 'red', size = 2) +
geom_point(aes(y = y), color = 'green', size = 2) +
geom_point(aes(y = z), color = 'blue', size = 2)
bin_width <- .5
dfft$fbin <- cut(dfft$freq, breaks = seq(0, max(dfft$freq), by = bin_width), right = FALSE)
dfft_bin <- aggregate(cbind(x, y, z) ~ fbin, data = dfft, FUN = mean)
ggplot(data = dfft_bin, aes(x = as.numeric(fbin))) + theme_bw() +
geom_line(aes(y = x), color = 'red') +
geom_line(aes(y = y), color = 'green') +
geom_line(aes(y = z), color = 'blue') +
geom_point(aes(y = x), color = 'red', size = 2) +
geom_point(aes(y = y), color = 'green', size = 2) +
geom_point(aes(y = z), color = 'blue', size = 2)
ggplot(data = this_trial, aes(x = time)) +
theme_bw() +
geom_line(aes(y = accel_x - mean(accel_x)), color = 'red') +
geom_line(aes(y = accel_y - mean(accel_y)), color = 'green') +
geom_line(aes(y = accel_z - mean(accel_z)), color = 'blue')
devtools::document()
devtools::document()
devtools::document()
plot(tablet_dat$touch$time)
plot(tablet_dat$touch$delta_time)
hist(tablet_dat$touch$delta_time)
hist(tablet_dat$touch$delta_time, bins = 100)
plot(tablet_dat$touch$delta_time[tablet_dat$touch_delta_time < 50])
plot(tablet_dat$touch$delta_time[tablet_dat$touch$delta_time < 50])
mean(tablet_dat$touch$delta_time[tablet_dat$touch$delta_time < 50])
hist(tablet_dat$touch$delta_time[tablet_dat$touch$delta_time < 50])
hist(tablet_dat$touch$delta_time[tablet_dat$touch$delta_time < 20])
min(tablet_dat$touch$delta_time)
sum(tablet_dat$touch$delta_time < 0)
sum(tablet_dat$touch$delta_time == 0)
hist(tablet_dat$touch$delta_time[tablet_dat$touch$delta_time < 20 & tablet_dat$touch$delta_time > 0])
devtools::document()
use_trials <- config$process_trials
